#!/bin/sh

# File autogenerated by mix horizon.init (source: build_script.sh.eex)
#
# Build script for a project to be run on the target machine.
# This app is located in the build folder for each `bin_path` and release.
#


# Exit immediately if a command exits with a non-zero status
set -eu

# Set ELIXIR_ERL_OPTIONS to force UTF-8 encoding
export ELIXIR_ERL_OPTIONS="+fnu +pc unicode"
export ERL_AFLAGS="+fnu"

# Navigate to the project directory
BUILD_PATH=/usr/local/opt/cloud/build
cd $BUILD_PATH

. ./bin/horizon_helpers.sh

printf "${GREEN}=== Starting Build Process ===${RESET}\n"
puts "info" "Setting up assets"

puts "info" "Install local.hex"
MIX_ENV=prod mix local.hex --force
MIX_ENV=prod mix deps.get --only prod

# Will need to manually check if tailwind for freebsd is installed as currently the --if-missing flag is not supported when passing in an argument
## install tailwind if it is not installed

create_app_dir() {
  doas mkdir -p /usr/local/cloud/releases
  doas chown -R $(whoami) /usr/local/cloud
}

mix_assets_setup_freebsd() {
  puts "info" "Checking for tailwind-$(get_arch)"
  if [ ! -f "/usr/local/opt/cloud/build/_build/tailwind-$(get_arch)" ]; then
    puts "info" "Installing Tailwind /usr/local/opt/cloud/build/_build/tailwind-$(get_arch)"
    MIX_ENV=prod  mix assets.setup.freebsd
  else
    puts "info" "Tailwind installed /usr/local/opt/cloud/build/_build/tailwind-$(get_arch)"
  fi
  echo ""
}

mix_phx_digest_clean() {
  puts "info" "Cleaning existing digests"
  MIX_ENV=prod mix phx.digest.clean --all
  echo ""
}

mix_assets_deploy() {
  puts "info" "Running: mix assets.deploy"
  MIX_ENV=prod mix assets.deploy
  echo ""
}

mix_release() {
  target="cloud"
  puts "info" "Running: mix release $target"
  sh -c "MIX_ENV=prod mix release cloud --overwrite"
}

puts "info" "Creating/Updating the release"

create_app_dir
mix_assets_setup_freebsd
mix_phx_digest_clean
mix_assets_deploy
mix_release

# move this to deploy/release
# sysrc cloud_enable="YES"
# add_user cloud

version="$(cut -d' ' -f2 "/usr/local/cloud/releases/start_erl.data")"

# App is in folder /usr/local/cloud cloud-$version.tar.gz
# App is ready for deployment to another host or started on the build host.
